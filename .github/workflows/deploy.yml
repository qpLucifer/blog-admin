name: Deploy Blog Admin Frontend

on:
  push:
    branches:
      - master  # 或者你使用的主分支名

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install env-cmd globally
        run: npm install -g env-cmd

      - name: Create production environment file
        run: |
          cat > .env.production << 'EOF'
          # 生产环境端口
          PORT=3001
          
          # 后端 API 服务地址 (使用你的服务器IP)
          REACT_APP_API_BASE_URL=${{ secrets.PROD_API_BASE_URL }}
          
          # 图片等静态资源的基础 URL
          REACT_APP_IMAGE_BASE_URL=${{ secrets.PROD_IMAGE_BASE_URL }}
          
          # WebSocket 服务地址
          REACT_APP_WS_URL=${{ secrets.PROD_WS_URL }}
          
          # 生成时间戳
          REACT_APP_BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          EOF

      - name: Run type check
        run: npm run type-check

      - name: Run linting
        run: npm run lint

      - name: Build for production
        run: npm run build:prod

      - name: Create deployment package
        run: |
          # 创建部署包，包含构建文件和nginx配置
          mkdir -p deploy-package
          cp -r build/* deploy-package/
          
          # 创建nginx配置文件
          cat > deploy-package/nginx.conf << 'EOF'
          server {
              listen 80;
              server_name _;
              root /www/wwwroot/blog-admin;
              index index.html;
              
              # 处理React Router的前端路由
              location / {
                  try_files $uri $uri/ /index.html;
              }
              
              # 缓存静态资源
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
              
              # API代理（如果需要）
              # location /api/ {
              #     proxy_pass http://127.0.0.1:3000/;
              #     proxy_set_header Host $host;
              #     proxy_set_header X-Real-IP $remote_addr;
              #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              #     proxy_set_header X-Forwarded-Proto $scheme;
              # }
              
              # 安全头设置
              add_header X-Frame-Options "SAMEORIGIN" always;
              add_header X-Content-Type-Options "nosniff" always;
              add_header X-XSS-Protection "1; mode=block" always;
          }
          EOF
          
          # 验证部署包内容
          echo "📦 部署包内容:"
          ls -la deploy-package/
          echo "📁 build目录内容:"
          ls -la build/
          echo "🔍 检查index.html是否存在:"
          if [ -f "deploy-package/index.html" ]; then
            echo "✅ index.html 存在"
            ls -la deploy-package/index.html
            echo "📄 index.html 前5行内容:"
            head -5 deploy-package/index.html
          else
            echo "❌ index.html 不存在"
            echo "🔍 检查build目录是否有index.html:"
            if [ -f "build/index.html" ]; then
              echo "✅ build/index.html 存在，但复制失败"
              ls -la build/index.html
            else
              echo "❌ build/index.html 也不存在，构建失败"
            fi
            exit 1
          fi

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy-package/*"
          target: "/tmp/blog-admin-deploy"
          strip_components: 1

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🔍 检查临时文件:"
            ls -la /tmp/blog-admin-deploy/
            echo "📄 检查临时目录中的index.html:"
            if [ -f "/tmp/blog-admin-deploy/index.html" ]; then
              echo "✅ 临时目录中有index.html"
              ls -la /tmp/blog-admin-deploy/index.html
              echo "📄 index.html 前5行内容:"
              head -5 /tmp/blog-admin-deploy/index.html
            else
              echo "❌ 临时目录中没有index.html"
              echo "📁 临时目录完整内容:"
              ls -la /tmp/blog-admin-deploy/
              exit 1
            fi
            
            # 创建目标目录（使用与BlogBackend相同的模式）
            sudo mkdir -p ${{ secrets.TARGET_DIR }}/blog-admin
            
            # 备份当前版本
            if [ -d "${{ secrets.TARGET_DIR }}/blog-admin" ] && [ "$(ls -A ${{ secrets.TARGET_DIR }}/blog-admin)" ]; then
              sudo mv ${{ secrets.TARGET_DIR }}/blog-admin ${{ secrets.TARGET_DIR }}/blog-admin-backup-$(date +%Y%m%d-%H%M%S)
              sudo mkdir -p ${{ secrets.TARGET_DIR }}/blog-admin
            fi
            
            # 移动新文件到目标目录
            echo "🔍 移动文件到目标目录..."
            sudo mv /tmp/blog-admin-deploy/* ${{ secrets.TARGET_DIR }}/blog-admin/
            
            echo "🔍 检查目标目录文件:"
            ls -la ${{ secrets.TARGET_DIR }}/blog-admin/
            echo "📄 检查目标目录中的index.html:"
            if [ -f "${{ secrets.TARGET_DIR }}/blog-admin/index.html" ]; then
              echo "✅ 目标目录中有index.html"
              ls -la ${{ secrets.TARGET_DIR }}/blog-admin/index.html
            else
              echo "❌ 目标目录中没有index.html"
              exit 1
            fi
            
            # 创建宝塔面板网站目录
            sudo mkdir -p /www/wwwroot/blog-admin
            
            # 清空网站目录并复制文件
            echo "🔍 复制文件到网站目录..."
            sudo rm -rf /www/wwwroot/blog-admin/*
            
            # 使用更详细的复制命令
            echo "🔍 执行复制命令..."
            sudo cp -rv ${{ secrets.TARGET_DIR }}/blog-admin/* /www/wwwroot/blog-admin/
            
            # 如果复制失败，尝试使用rsync
            if [ $? -ne 0 ]; then
              echo "⚠️ cp命令失败，尝试使用rsync..."
              sudo rsync -av ${{ secrets.TARGET_DIR }}/blog-admin/ /www/wwwroot/blog-admin/
            fi
            
            echo "🔍 检查网站目录文件:"
            ls -la /www/wwwroot/blog-admin/
            echo "📄 检查网站目录中的index.html:"
            if [ -f "/www/wwwroot/blog-admin/index.html" ]; then
              echo "✅ 网站目录中有index.html"
              ls -la /www/wwwroot/blog-admin/index.html
            else
              echo "❌ 网站目录中没有index.html"
              echo "🔍 检查复制命令的输出和错误..."
              echo "📁 目标目录内容:"
              ls -la ${{ secrets.TARGET_DIR }}/blog-admin/
              echo "📁 网站目录内容:"
              ls -la /www/wwwroot/blog-admin/
              echo "🔍 尝试手动复制单个文件..."
              sudo cp ${{ secrets.TARGET_DIR }}/blog-admin/index.html /www/wwwroot/blog-admin/
              if [ -f "/www/wwwroot/blog-admin/index.html" ]; then
                echo "✅ 手动复制成功"
                ls -la /www/wwwroot/blog-admin/index.html
              else
                echo "❌ 手动复制也失败"
                exit 1
              fi
            fi
            
            # 设置权限
            sudo chown -R www:www ${{ secrets.TARGET_DIR }}/blog-admin
            sudo chmod -R 755 ${{ secrets.TARGET_DIR }}/blog-admin
            
            # 设置宝塔面板目录权限
            sudo chown -R www:www /www/wwwroot/blog-admin
            sudo chmod -R 755 /www/wwwroot/blog-admin
            
            # 确保网站目录有正确的权限
            sudo chmod 755 /www/wwwroot/blog-admin
            
            # 清理临时文件
            rm -rf /tmp/blog-admin-deploy
            
            # 清理旧备份（保留最近3个）
            cd ${{ secrets.TARGET_DIR }} && sudo ls -dt blog-admin-backup-* 2>/dev/null | tail -n +4 | sudo xargs rm -rf
            
            echo "✅ Blog Admin frontend deployed successfully!"
            echo "📦 Build completed at: $(date)"
            echo "📁 Deployed to: ${{ secrets.TARGET_DIR }}/blog-admin"
            echo "🌐 Web accessible at: /www/wwwroot/blog-admin"

      - name: Health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🔍 详细检查部署状态:"
            
            # 检查目标目录
            echo "📁 目标目录 ${{ secrets.TARGET_DIR }}/blog-admin:"
            ls -la ${{ secrets.TARGET_DIR }}/blog-admin/
            
            # 检查网站目录
            echo "📁 网站目录 /www/wwwroot/blog-admin:"
            ls -la /www/wwwroot/blog-admin/
            
            # 检查文件是否部署成功
            if [ -f "/www/wwwroot/blog-admin/index.html" ]; then
              echo "✅ Frontend files deployed successfully"
              echo "📄 index.html 内容预览:"
              head -5 /www/wwwroot/blog-admin/index.html
            else
              echo "❌ Deployment failed: index.html not found in /www/wwwroot/blog-admin/"
              
              # 检查目标目录是否有文件
              if [ -f "${{ secrets.TARGET_DIR }}/blog-admin/index.html" ]; then
                echo "⚠️ index.html exists in target dir but not in web dir"
                echo "📄 Target dir index.html content:"
                head -5 ${{ secrets.TARGET_DIR }}/blog-admin/index.html
              else
                echo "❌ index.html not found in target dir either"
                echo "🔍 检查目标目录是否存在:"
                if [ -d "${{ secrets.TARGET_DIR }}/blog-admin" ]; then
                  echo "✅ 目标目录存在"
                  echo "📁 目标目录内容:"
                  ls -la ${{ secrets.TARGET_DIR }}/blog-admin/
                else
                  echo "❌ 目标目录不存在"
                fi
              fi
              exit 1
            fi

      - name: Notify deployment status
        if: always()
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Deployment Summary:"
            echo "📅 Time: $(date)"
            echo "🌐 Project: Blog Admin Frontend"
            echo "📋 Status: ${{ job.status }}"
            echo "📁 Deployed to: ${{ secrets.TARGET_DIR }}/blog-admin"
            echo "🌐 Web accessible at: /www/wwwroot/blog-admin"
            echo "🔗 Expected URL: http://${{ secrets.SERVER_IP }}/ (配置域名后使用域名访问)"
            echo ""
            echo "🔧 需要的GitHub Secrets:"
            echo "- SERVER_IP: 服务器IP地址"
            echo "- SSH_USERNAME: SSH用户名"
            echo "- SSH_PRIVATE_KEY: SSH私钥"
            echo "- TARGET_DIR: 目标部署目录 (如: /www/wwwroot)"
            echo "- PROD_API_BASE_URL: 生产环境API地址 (如: http://your-server:3000)"
            echo "- PROD_IMAGE_BASE_URL: 生产环境图片地址 (如: http://your-server:3000)"
            echo "- PROD_WS_URL: 生产环境WebSocket地址 (如: http://your-server:3000)"
